/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/assets/core/plugins/custom/jkanban/jkanban.js":
/*!*****************************************************************!*\
  !*** ./resources/assets/core/plugins/custom/jkanban/jkanban.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("// jKanban Board - Vanilla Javascript plugin for manage kanban boards: https://github.com/riktar/jkanban\n__webpack_require__(/*! jkanban/dist/jkanban.js */ \"./node_modules/jkanban/dist/jkanban.js\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvYXNzZXRzL2NvcmUvcGx1Z2lucy9jdXN0b20vamthbmJhbi9qa2FuYmFuLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLG1CQUFPLENBQUMsdUVBQUQsQ0FBUCIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3Jlc291cmNlcy9hc3NldHMvY29yZS9wbHVnaW5zL2N1c3RvbS9qa2FuYmFuL2prYW5iYW4uanM/NzNkNiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBqS2FuYmFuIEJvYXJkIC0gVmFuaWxsYSBKYXZhc2NyaXB0IHBsdWdpbiBmb3IgbWFuYWdlIGthbmJhbiBib2FyZHM6IGh0dHBzOi8vZ2l0aHViLmNvbS9yaWt0YXIvamthbmJhblxyXG5cclxucmVxdWlyZSgnamthbmJhbi9kaXN0L2prYW5iYW4uanMnKTtcclxuIl0sIm5hbWVzIjpbInJlcXVpcmUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./resources/assets/core/plugins/custom/jkanban/jkanban.js\n");

/***/ }),

/***/ "./node_modules/jkanban/dist/jkanban.js":
/*!**********************************************!*\
  !*** ./node_modules/jkanban/dist/jkanban.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=undefined;if(!f&&c)return require(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=undefined,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\r\n/**\r\n * jKanban\r\n * Vanilla Javascript plugin for manage kanban boards\r\n *\r\n * @site: http://www.riccardotartaglia.it/jkanban/\r\n * @author: Riccardo Tartaglia\r\n */\r\n\r\n//Require dragula\r\nvar dragula = require('dragula');\r\n\r\n(function () {\r\n  this.jKanban = function () {\r\n    var self = this\r\n    var __DEFAULT_ITEM_HANDLE_OPTIONS = {\r\n      enabled: false\r\n    }\r\n    var __DEFAULT_ITEM_ADD_OPTIONS = {\r\n      enabled: false\r\n    }\r\n    this._disallowedItemProperties = [\r\n      'id',\r\n      'title',\r\n      'click',\r\n      'drag',\r\n      'dragend',\r\n      'drop',\r\n      'order'\r\n    ]\r\n    this.element = ''\r\n    this.container = ''\r\n    this.boardContainer = []\r\n    this.handlers = []\r\n    this.dragula = dragula\r\n    this.drake = ''\r\n    this.drakeBoard = ''\r\n    this.itemAddOptions = __DEFAULT_ITEM_ADD_OPTIONS\r\n    this.itemHandleOptions = __DEFAULT_ITEM_HANDLE_OPTIONS\r\n    var defaults = {\r\n      element: '',\r\n      gutter: '15px',\r\n      widthBoard: '250px',\r\n      responsive: '700',\r\n      responsivePercentage: false,\r\n      boards: [],\r\n      dragBoards: true,\r\n      dragItems: true, //whether can drag cards or not, useful when set permissions on it.\r\n      itemAddOptions: __DEFAULT_ITEM_ADD_OPTIONS,\r\n      itemHandleOptions: __DEFAULT_ITEM_HANDLE_OPTIONS,\r\n      dragEl: function (el, source) {},\r\n      dragendEl: function (el) {},\r\n      dropEl: function (el, target, source, sibling) {},\r\n      dragBoard: function (el, source) {},\r\n      dragendBoard: function (el) {},\r\n      dropBoard: function (el, target, source, sibling) {},\r\n      click: function (el) {},\r\n      buttonClick: function (el, boardId) {}\r\n    }\r\n\r\n    if (arguments[0] && typeof arguments[0] === 'object') {\r\n      this.options = __extendDefaults(defaults, arguments[0])\r\n    }\r\n\r\n    this.__getCanMove = function (handle) {\r\n      if (!self.options.itemHandleOptions.enabled) {\r\n        return !!self.options.dragItems\r\n      }\r\n\r\n      if (self.options.itemHandleOptions.handleClass) {\r\n        return handle.classList.contains(self.options.itemHandleOptions.handleClass)\r\n      }\r\n\r\n      return handle.classList.contains('item_handle')\r\n    }\r\n\r\n    this.init = function () {\r\n      //set initial boards\r\n      __setBoard()\r\n      //set drag with dragula\r\n      if (window.innerWidth > self.options.responsive) {\r\n        //Init Drag Board\r\n        self.drakeBoard = self\r\n          .dragula([self.container], {\r\n            moves: function (el, source, handle, sibling) {\r\n              if (!self.options.dragBoards) return false\r\n              return (\r\n                handle.classList.contains('kanban-board-header') ||\r\n                handle.classList.contains('kanban-title-board')\r\n              )\r\n            },\r\n            accepts: function (el, target, source, sibling) {\r\n              return target.classList.contains('kanban-container')\r\n            },\r\n            revertOnSpill: true,\r\n            direction: 'horizontal'\r\n          })\r\n          .on('drag', function (el, source) {\r\n            el.classList.add('is-moving')\r\n            self.options.dragBoard(el, source)\r\n            if (typeof el.dragfn === 'function') el.dragfn(el, source)\r\n          })\r\n          .on('dragend', function (el) {\r\n            __updateBoardsOrder()\r\n            el.classList.remove('is-moving')\r\n            self.options.dragendBoard(el)\r\n            if (typeof el.dragendfn === 'function') el.dragendfn(el)\r\n          })\r\n          .on('drop', function (el, target, source, sibling) {\r\n            el.classList.remove('is-moving')\r\n            self.options.dropBoard(el, target, source, sibling)\r\n            if (typeof el.dropfn === 'function')\r\n              el.dropfn(el, target, source, sibling)\r\n          })\r\n\r\n        //Init Drag Item\r\n        self.drake = self\r\n          .dragula(self.boardContainer, {\r\n            moves: function (el, source, handle, sibling) {\r\n              return self.__getCanMove(handle)\r\n            },\r\n            revertOnSpill: true\r\n          })\r\n          .on('cancel', function (el, container, source) {\r\n            self.enableAllBoards()\r\n          })\r\n          .on('drag', function (el, source) {\r\n            var elClass = el.getAttribute('class')\r\n            if (elClass !== '' && elClass.indexOf('not-draggable') > -1) {\r\n              self.drake.cancel(true)\r\n              return\r\n            }\r\n\r\n            el.classList.add('is-moving')\r\n\r\n            self.options.dragEl(el, source)\r\n\r\n            var boardJSON = __findBoardJSON(source.parentNode.dataset.id)\r\n            if (boardJSON.dragTo !== undefined) {\r\n              self.options.boards.map(function (board) {\r\n                if (\r\n                  boardJSON.dragTo.indexOf(board.id) === -1 &&\r\n                  board.id !== source.parentNode.dataset.id\r\n                ) {\r\n                  self.findBoard(board.id).classList.add('disabled-board')\r\n                }\r\n              })\r\n            }\r\n\r\n            if (el !== null && typeof el.dragfn === 'function')\r\n              el.dragfn(el, source)\r\n          })\r\n          .on('dragend', function (el) {\r\n            self.options.dragendEl(el)\r\n            if (el !== null && typeof el.dragendfn === 'function')\r\n              el.dragendfn(el)\r\n          })\r\n          .on('drop', function (el, target, source, sibling) {\r\n            self.enableAllBoards()\r\n\r\n            var boardJSON = __findBoardJSON(source.parentNode.dataset.id)\r\n            if (boardJSON.dragTo !== undefined) {\r\n              if (\r\n                boardJSON.dragTo.indexOf(target.parentNode.dataset.id) === -1 &&\r\n                target.parentNode.dataset.id !== source.parentNode.dataset.id\r\n              ) {\r\n                self.drake.cancel(true)\r\n              }\r\n            }\r\n            if (el !== null) {\r\n              var result = self.options.dropEl(el, target, source, sibling)\r\n              if (result === false) {\r\n                self.drake.cancel(true)\r\n              }\r\n              el.classList.remove('is-moving')\r\n              if (typeof el.dropfn === 'function')\r\n                el.dropfn(el, target, source, sibling)\r\n            }\r\n          })\r\n      }\r\n    }\r\n\r\n    this.enableAllBoards = function () {\r\n      var allB = document.querySelectorAll('.kanban-board')\r\n      if (allB.length > 0 && allB !== undefined) {\r\n        for (var i = 0; i < allB.length; i++) {\r\n          allB[i].classList.remove('disabled-board')\r\n        }\r\n      }\r\n    }\r\n\r\n    this.addElement = function (boardID, element) {\r\n      var board = self.element.querySelector(\r\n        '[data-id=\"' + boardID + '\"] .kanban-drag'\r\n      )\r\n      var nodeItem = document.createElement('div')\r\n      nodeItem.classList.add('kanban-item')\r\n      if (typeof element.id !== 'undefined' && element.id !== '') {\r\n        nodeItem.setAttribute('data-eid', element.id)\r\n      }\r\n      if (element.class && Array.isArray(element.class)) {\r\n        element.class.forEach(function (cl) {\r\n          nodeItem.classList.add(cl)\r\n        })\r\n      }\r\n      nodeItem.innerHTML = __buildItemTitle(element.title)\r\n      //add function\r\n      nodeItem.clickfn = element.click\r\n      nodeItem.dragfn = element.drag\r\n      nodeItem.dragendfn = element.dragend\r\n      nodeItem.dropfn = element.drop\r\n      __appendCustomProperties(nodeItem, element)\r\n      __onclickHandler(nodeItem)\r\n      if (self.options.itemHandleOptions.enabled) {\r\n        nodeItem.style.cursor = 'default'\r\n      }\r\n      board.appendChild(nodeItem)\r\n      return self\r\n    }\r\n\r\n    this.addForm = function (boardID, formItem) {\r\n      var board = self.element.querySelector(\r\n        '[data-id=\"' + boardID + '\"] .kanban-drag'\r\n      )\r\n      var _attribute = formItem.getAttribute('class')\r\n      formItem.setAttribute('class', _attribute + ' not-draggable')\r\n      board.appendChild(formItem)\r\n      return self\r\n    }\r\n\r\n    this.addBoards = function (boards, isInit) {\r\n      if (self.options.responsivePercentage) {\r\n        self.container.style.width = '100%'\r\n        self.options.gutter = '1%'\r\n        if (window.innerWidth > self.options.responsive) {\r\n          var boardWidth = (100 - boards.length * 2) / boards.length\r\n        } else {\r\n          var boardWidth = 100 - boards.length * 2\r\n        }\r\n      } else {\r\n        var boardWidth = self.options.widthBoard\r\n      }\r\n      var addButton = self.options.itemAddOptions.enabled\r\n      var buttonContent = self.options.itemAddOptions.content\r\n      var buttonClass = self.options.itemAddOptions.class\r\n      var buttonFooter = self.options.itemAddOptions.footer\r\n\r\n      //for on all the boards\r\n      for (var boardkey in boards) {\r\n        // single board\r\n        var board = boards[boardkey]\r\n        if (!isInit) {\r\n          self.options.boards.push(board)\r\n        }\r\n\r\n        if (!self.options.responsivePercentage) {\r\n          //add width to container\r\n          if (self.container.style.width === '') {\r\n            self.container.style.width =\r\n              parseInt(boardWidth) + parseInt(self.options.gutter) * 2 + 'px'\r\n          } else {\r\n            self.container.style.width =\r\n              parseInt(self.container.style.width) +\r\n              parseInt(boardWidth) +\r\n              parseInt(self.options.gutter) * 2 +\r\n              'px'\r\n          }\r\n        }\r\n        //create node\r\n        var boardNode = document.createElement('div')\r\n        boardNode.dataset.id = board.id\r\n        boardNode.dataset.order = self.container.childNodes.length + 1\r\n        boardNode.classList.add('kanban-board')\r\n        //set style\r\n        if (self.options.responsivePercentage) {\r\n          boardNode.style.width = boardWidth + '%'\r\n        } else {\r\n          boardNode.style.width = boardWidth\r\n        }\r\n        boardNode.style.marginLeft = self.options.gutter\r\n        boardNode.style.marginRight = self.options.gutter\r\n        // header board\r\n        var headerBoard = document.createElement('header')\r\n        if (board.class !== '' && board.class !== undefined)\r\n          var allClasses = board.class.split(',')\r\n        else allClasses = []\r\n        headerBoard.classList.add('kanban-board-header')\r\n        allClasses.map(function (value) {\r\n          // Remove empty spaces\r\n          value = value.replace(/^[ ]+/g, '')\r\n          headerBoard.classList.add(value)\r\n        })\r\n        headerBoard.innerHTML =\r\n          '<div class=\"kanban-title-board\">' + board.title + '</div>'\r\n        //content board\r\n        var contentBoard = document.createElement('main')\r\n        contentBoard.classList.add('kanban-drag')\r\n        if (board.bodyClass !== '' && board.bodyClass !== undefined)\r\n          var bodyClasses = board.bodyClass.split(',')\r\n        else bodyClasses = []\r\n        bodyClasses.map(function (value) {\r\n          contentBoard.classList.add(value)\r\n        })\r\n        //add drag to array for dragula\r\n        self.boardContainer.push(contentBoard)\r\n        for (var itemkey in board.item) {\r\n          //create item\r\n          var itemKanban = board.item[itemkey]\r\n          var nodeItem = document.createElement('div')\r\n          nodeItem.classList.add('kanban-item')\r\n          if (itemKanban.id) {\r\n            nodeItem.dataset.eid = itemKanban.id\r\n          }\r\n          if (itemKanban.class && Array.isArray(itemKanban.class)) {\r\n            itemKanban.class.forEach(function (cl) {\r\n              nodeItem.classList.add(cl)\r\n            })\r\n          }\r\n          nodeItem.innerHTML = __buildItemTitle(itemKanban.title)\r\n          //add function\r\n          nodeItem.clickfn = itemKanban.click\r\n          nodeItem.dragfn = itemKanban.drag\r\n          nodeItem.dragendfn = itemKanban.dragend\r\n          nodeItem.dropfn = itemKanban.drop\r\n          __appendCustomProperties(nodeItem, itemKanban)\r\n          //add click handler of item\r\n          __onclickHandler(nodeItem)\r\n          if (self.options.itemHandleOptions.enabled) {\r\n            nodeItem.style.cursor = 'default'\r\n          }\r\n          contentBoard.appendChild(nodeItem)\r\n        }\r\n        //footer board\r\n        var footerBoard = document.createElement('footer')\r\n        // if add button is true, add button to the board\r\n        if (addButton) {\r\n          var btn = document.createElement('BUTTON')\r\n          var t = document.createTextNode(buttonContent ? buttonContent : '+')\r\n          btn.setAttribute(\r\n            'class',\r\n            buttonClass ? buttonClass : 'kanban-title-button btn btn-default btn-xs'\r\n          )\r\n          btn.appendChild(t)\r\n          //var buttonHtml = '<button class=\"kanban-title-button btn btn-default btn-xs\">'+buttonContent+'</button>'\r\n          if (buttonFooter) {\r\n            footerBoard.appendChild(btn)\r\n          } else {\r\n            headerBoard.appendChild(btn)\r\n          }\r\n          __onButtonClickHandler(btn, board.id)\r\n        }\r\n        //board assembly\r\n        boardNode.appendChild(headerBoard)\r\n        boardNode.appendChild(contentBoard)\r\n        boardNode.appendChild(footerBoard)\r\n        //board add\r\n        self.container.appendChild(boardNode)\r\n      }\r\n      return self\r\n    }\r\n\r\n    this.findBoard = function (id) {\r\n      var el = self.element.querySelector('[data-id=\"' + id + '\"]')\r\n      return el\r\n    }\r\n\r\n    this.getParentBoardID = function (el) {\r\n      if (typeof el === 'string') {\r\n        el = self.element.querySelector('[data-eid=\"' + el + '\"]')\r\n      }\r\n      if (el === null) {\r\n        return null\r\n      }\r\n      return el.parentNode.parentNode.dataset.id\r\n    }\r\n\r\n    this.moveElement = function (targetBoardID, elementID, element) {\r\n      if (targetBoardID === this.getParentBoardID(elementID)) {\r\n        return\r\n      }\r\n\r\n      this.removeElement(elementID)\r\n      return this.addElement(targetBoardID, element)\r\n    }\r\n\r\n    this.replaceElement = function (el, element) {\r\n      var nodeItem = el\r\n      if (typeof nodeItem === 'string') {\r\n        nodeItem = self.element.querySelector('[data-eid=\"' + el + '\"]')\r\n      }\r\n      nodeItem.innerHTML = element.title\r\n      // add function\r\n      nodeItem.clickfn = element.click\r\n      nodeItem.dragfn = element.drag\r\n      nodeItem.dragendfn = element.dragend\r\n      nodeItem.dropfn = element.drop\r\n      __appendCustomProperties(nodeItem, element)\r\n      return self\r\n    }\r\n\r\n    this.findElement = function (id) {\r\n      var el = self.element.querySelector('[data-eid=\"' + id + '\"]')\r\n      return el\r\n    }\r\n\r\n    this.getBoardElements = function (id) {\r\n      var board = self.element.querySelector(\r\n        '[data-id=\"' + id + '\"] .kanban-drag'\r\n      )\r\n      return board.childNodes\r\n    }\r\n\r\n    this.removeElement = function (el) {\r\n      if (typeof el === 'string')\r\n        el = self.element.querySelector('[data-eid=\"' + el + '\"]')\r\n      if (el !== null) {\r\n        //fallback for IE\r\n        if (typeof el.remove == 'function') {\r\n          el.remove()\r\n        } else {\r\n          el.parentNode.removeChild(el)\r\n        }\r\n      }\r\n      return self\r\n    }\r\n\r\n    this.removeBoard = function (board) {\r\n      var boardElement = null\r\n      if (typeof board === 'string')\r\n        boardElement = self.element.querySelector('[data-id=\"' + board + '\"]')\r\n      if (boardElement !== null) {\r\n        //fallback for IE\r\n        if (typeof boardElement.remove == 'function') {\r\n          boardElement.remove()\r\n        } else {\r\n          boardElement.parentNode.removeChild(boardElement)\r\n        }\r\n      }\r\n\r\n      // remove thboard in options.boards\r\n      for (var i = 0; i < self.options.boards.length; i++) {\r\n        if (self.options.boards[i].id === board) {\r\n          self.options.boards.splice(i, 1)\r\n          break\r\n        }\r\n      }\r\n\r\n      return self\r\n    }\r\n\r\n    // board button on click function\r\n    this.onButtonClick = function (el) {}\r\n\r\n    //PRIVATE FUNCTION\r\n    function __extendDefaults (source, properties) {\r\n      var property\r\n      for (property in properties) {\r\n        if (properties.hasOwnProperty(property)) {\r\n          source[property] = properties[property]\r\n        }\r\n      }\r\n      return source\r\n    }\r\n\r\n    function __setBoard () {\r\n      self.element = document.querySelector(self.options.element)\r\n      //create container\r\n      var boardContainer = document.createElement('div')\r\n      boardContainer.classList.add('kanban-container')\r\n      self.container = boardContainer\r\n      //add boards\r\n\r\n      if (document.querySelector(self.options.element).dataset.hasOwnProperty('board')) {\r\n        url = document.querySelector(self.options.element).dataset.board\r\n        window.fetch(url, {\r\n          method: 'GET',\r\n          headers: { 'Content-Type': 'application/json' }\r\n        })\r\n          .then((response) => {\r\n            // log response text\r\n            response.json().then(function (data) {\r\n              self.options.boards = data\r\n              self.addBoards(self.options.boards, true)\r\n            })\r\n\r\n          })\r\n          .catch((error) => {\r\n            console.log('Error: ', error)\r\n          })\r\n      } else {\r\n        self.addBoards(self.options.boards, true)\r\n      }\r\n\r\n      //appends to container\r\n      self.element.appendChild(self.container)\r\n    }\r\n\r\n    function __onclickHandler (nodeItem, clickfn) {\r\n      nodeItem.addEventListener('click', function (e) {\r\n        e.preventDefault()\r\n        self.options.click(this)\r\n        if (typeof this.clickfn === 'function') this.clickfn(this)\r\n      })\r\n    }\r\n\r\n    function __onButtonClickHandler (nodeItem, boardId) {\r\n      nodeItem.addEventListener('click', function (e) {\r\n        e.preventDefault()\r\n        self.options.buttonClick(this, boardId)\r\n        // if(typeof(this.clickfn) === 'function')\r\n        //     this.clickfn(this);\r\n      })\r\n    }\r\n\r\n    function __findBoardJSON (id) {\r\n      var el = []\r\n      self.options.boards.map(function (board) {\r\n        if (board.id === id) {\r\n          return el.push(board)\r\n        }\r\n      })\r\n      return el[0]\r\n    }\r\n\r\n    function __appendCustomProperties (element, parentObject) {\r\n      for (var propertyName in parentObject) {\r\n        if (self._disallowedItemProperties.indexOf(propertyName) > -1) {\r\n          continue\r\n        }\r\n\r\n        element.setAttribute(\r\n          'data-' + propertyName,\r\n          parentObject[propertyName]\r\n        )\r\n      }\r\n    }\r\n\r\n    function __updateBoardsOrder () {\r\n      var index = 1\r\n      for (var i = 0; i < self.container.childNodes.length; i++) {\r\n        self.container.childNodes[i].dataset.order = index++\r\n      }\r\n    }\r\n\r\n    function __buildItemTitle (title) {\r\n      var result = title\r\n      if (self.options.itemHandleOptions.enabled) {\r\n        if ((self.options.itemHandleOptions.customHandler || undefined) === undefined) {\r\n          var customCssHandler = self.options.itemHandleOptions.customCssHandler\r\n          var customCssIconHandler = self.options.itemHandleOptions.customCssIconHandler\r\n          if ((customCssHandler || undefined) === undefined) {\r\n            customCssHandler = 'drag_handler'\r\n          }\r\n          if ((customCssIconHandler || undefined) === undefined) {\r\n            customCssIconHandler = customCssHandler + '_icon'\r\n          }\r\n\r\n          result = '<div class=\\'item_handle ' + customCssHandler + '\\'><i class=\\'item_handle ' + customCssIconHandler + '\\'></i></div><div>' + result + '</div>'\r\n        } else {\r\n          result = self.options.itemHandleOptions.customHandler.replace('%s', result)\r\n        }\r\n      }\r\n      return result\r\n    }\r\n\r\n    //init plugin\r\n    this.init()\r\n  }\r\n})()\r\n\r\n},{\"dragula\":9}],2:[function(require,module,exports){\r\nmodule.exports = function atoa (a, n) { return Array.prototype.slice.call(a, n); }\r\n\r\n},{}],3:[function(require,module,exports){\r\n'use strict';\r\n\r\nvar ticky = require('ticky');\r\n\r\nmodule.exports = function debounce (fn, args, ctx) {\r\n  if (!fn) { return; }\r\n  ticky(function run () {\r\n    fn.apply(ctx || null, args || []);\r\n  });\r\n};\r\n\r\n},{\"ticky\":11}],4:[function(require,module,exports){\r\n'use strict';\r\n\r\nvar atoa = require('atoa');\r\nvar debounce = require('./debounce');\r\n\r\nmodule.exports = function emitter (thing, options) {\r\n  var opts = options || {};\r\n  var evt = {};\r\n  if (thing === undefined) { thing = {}; }\r\n  thing.on = function (type, fn) {\r\n    if (!evt[type]) {\r\n      evt[type] = [fn];\r\n    } else {\r\n      evt[type].push(fn);\r\n    }\r\n    return thing;\r\n  };\r\n  thing.once = function (type, fn) {\r\n    fn._once = true; // thing.off(fn) still works!\r\n    thing.on(type, fn);\r\n    return thing;\r\n  };\r\n  thing.off = function (type, fn) {\r\n    var c = arguments.length;\r\n    if (c === 1) {\r\n      delete evt[type];\r\n    } else if (c === 0) {\r\n      evt = {};\r\n    } else {\r\n      var et = evt[type];\r\n      if (!et) { return thing; }\r\n      et.splice(et.indexOf(fn), 1);\r\n    }\r\n    return thing;\r\n  };\r\n  thing.emit = function () {\r\n    var args = atoa(arguments);\r\n    return thing.emitterSnapshot(args.shift()).apply(this, args);\r\n  };\r\n  thing.emitterSnapshot = function (type) {\r\n    var et = (evt[type] || []).slice(0);\r\n    return function () {\r\n      var args = atoa(arguments);\r\n      var ctx = this || thing;\r\n      if (type === 'error' && opts.throws !== false && !et.length) { throw args.length === 1 ? args[0] : args; }\r\n      et.forEach(function emitter (listen) {\r\n        if (opts.async) { debounce(listen, args, ctx); } else { listen.apply(ctx, args); }\r\n        if (listen._once) { thing.off(type, listen); }\r\n      });\r\n      return thing;\r\n    };\r\n  };\r\n  return thing;\r\n};\r\n\r\n},{\"./debounce\":3,\"atoa\":2}],5:[function(require,module,exports){\r\n(function (global){(function (){\r\n'use strict';\r\n\r\nvar customEvent = require('custom-event');\r\nvar eventmap = require('./eventmap');\r\nvar doc = global.document;\r\nvar addEvent = addEventEasy;\r\nvar removeEvent = removeEventEasy;\r\nvar hardCache = [];\r\n\r\nif (!global.addEventListener) {\r\n  addEvent = addEventHard;\r\n  removeEvent = removeEventHard;\r\n}\r\n\r\nmodule.exports = {\r\n  add: addEvent,\r\n  remove: removeEvent,\r\n  fabricate: fabricateEvent\r\n};\r\n\r\nfunction addEventEasy (el, type, fn, capturing) {\r\n  return el.addEventListener(type, fn, capturing);\r\n}\r\n\r\nfunction addEventHard (el, type, fn) {\r\n  return el.attachEvent('on' + type, wrap(el, type, fn));\r\n}\r\n\r\nfunction removeEventEasy (el, type, fn, capturing) {\r\n  return el.removeEventListener(type, fn, capturing);\r\n}\r\n\r\nfunction removeEventHard (el, type, fn) {\r\n  var listener = unwrap(el, type, fn);\r\n  if (listener) {\r\n    return el.detachEvent('on' + type, listener);\r\n  }\r\n}\r\n\r\nfunction fabricateEvent (el, type, model) {\r\n  var e = eventmap.indexOf(type) === -1 ? makeCustomEvent() : makeClassicEvent();\r\n  if (el.dispatchEvent) {\r\n    el.dispatchEvent(e);\r\n  } else {\r\n    el.fireEvent('on' + type, e);\r\n  }\r\n  function makeClassicEvent () {\r\n    var e;\r\n    if (doc.createEvent) {\r\n      e = doc.createEvent('Event');\r\n      e.initEvent(type, true, true);\r\n    } else if (doc.createEventObject) {\r\n      e = doc.createEventObject();\r\n    }\r\n    return e;\r\n  }\r\n  function makeCustomEvent () {\r\n    return new customEvent(type, { detail: model });\r\n  }\r\n}\r\n\r\nfunction wrapperFactory (el, type, fn) {\r\n  return function wrapper (originalEvent) {\r\n    var e = originalEvent || global.event;\r\n    e.target = e.target || e.srcElement;\r\n    e.preventDefault = e.preventDefault || function preventDefault () { e.returnValue = false; };\r\n    e.stopPropagation = e.stopPropagation || function stopPropagation () { e.cancelBubble = true; };\r\n    e.which = e.which || e.keyCode;\r\n    fn.call(el, e);\r\n  };\r\n}\r\n\r\nfunction wrap (el, type, fn) {\r\n  var wrapper = unwrap(el, type, fn) || wrapperFactory(el, type, fn);\r\n  hardCache.push({\r\n    wrapper: wrapper,\r\n    element: el,\r\n    type: type,\r\n    fn: fn\r\n  });\r\n  return wrapper;\r\n}\r\n\r\nfunction unwrap (el, type, fn) {\r\n  var i = find(el, type, fn);\r\n  if (i) {\r\n    var wrapper = hardCache[i].wrapper;\r\n    hardCache.splice(i, 1); // free up a tad of memory\r\n    return wrapper;\r\n  }\r\n}\r\n\r\nfunction find (el, type, fn) {\r\n  var i, item;\r\n  for (i = 0; i < hardCache.length; i++) {\r\n    item = hardCache[i];\r\n    if (item.element === el && item.type === type && item.fn === fn) {\r\n      return i;\r\n    }\r\n  }\r\n}\r\n\r\n}).call(this)}).call(this,typeof __webpack_require__.g !== \"undefined\" ? __webpack_require__.g : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\r\n},{\"./eventmap\":6,\"custom-event\":7}],6:[function(require,module,exports){\r\n(function (global){(function (){\r\n'use strict';\r\n\r\nvar eventmap = [];\r\nvar eventname = '';\r\nvar ron = /^on/;\r\n\r\nfor (eventname in global) {\r\n  if (ron.test(eventname)) {\r\n    eventmap.push(eventname.slice(2));\r\n  }\r\n}\r\n\r\nmodule.exports = eventmap;\r\n\r\n}).call(this)}).call(this,typeof __webpack_require__.g !== \"undefined\" ? __webpack_require__.g : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\r\n},{}],7:[function(require,module,exports){\r\n(function (global){(function (){\r\n\r\nvar NativeCustomEvent = global.CustomEvent;\r\n\r\nfunction useNative () {\r\n  try {\r\n    var p = new NativeCustomEvent('cat', { detail: { foo: 'bar' } });\r\n    return  'cat' === p.type && 'bar' === p.detail.foo;\r\n  } catch (e) {\r\n  }\r\n  return false;\r\n}\r\n\r\n/**\r\n * Cross-browser `CustomEvent` constructor.\r\n *\r\n * https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent.CustomEvent\r\n *\r\n * @public\r\n */\r\n\r\nmodule.exports = useNative() ? NativeCustomEvent :\r\n\r\n// IE >= 9\r\n'undefined' !== typeof document && 'function' === typeof document.createEvent ? function CustomEvent (type, params) {\r\n  var e = document.createEvent('CustomEvent');\r\n  if (params) {\r\n    e.initCustomEvent(type, params.bubbles, params.cancelable, params.detail);\r\n  } else {\r\n    e.initCustomEvent(type, false, false, void 0);\r\n  }\r\n  return e;\r\n} :\r\n\r\n// IE <= 8\r\nfunction CustomEvent (type, params) {\r\n  var e = document.createEventObject();\r\n  e.type = type;\r\n  if (params) {\r\n    e.bubbles = Boolean(params.bubbles);\r\n    e.cancelable = Boolean(params.cancelable);\r\n    e.detail = params.detail;\r\n  } else {\r\n    e.bubbles = false;\r\n    e.cancelable = false;\r\n    e.detail = void 0;\r\n  }\r\n  return e;\r\n}\r\n\r\n}).call(this)}).call(this,typeof __webpack_require__.g !== \"undefined\" ? __webpack_require__.g : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\r\n},{}],8:[function(require,module,exports){\r\n'use strict';\r\n\r\nvar cache = {};\r\nvar start = '(?:^|\\\\s)';\r\nvar end = '(?:\\\\s|$)';\r\n\r\nfunction lookupClass (className) {\r\n  var cached = cache[className];\r\n  if (cached) {\r\n    cached.lastIndex = 0;\r\n  } else {\r\n    cache[className] = cached = new RegExp(start + className + end, 'g');\r\n  }\r\n  return cached;\r\n}\r\n\r\nfunction addClass (el, className) {\r\n  var current = el.className;\r\n  if (!current.length) {\r\n    el.className = className;\r\n  } else if (!lookupClass(className).test(current)) {\r\n    el.className += ' ' + className;\r\n  }\r\n}\r\n\r\nfunction rmClass (el, className) {\r\n  el.className = el.className.replace(lookupClass(className), ' ').trim();\r\n}\r\n\r\nmodule.exports = {\r\n  add: addClass,\r\n  rm: rmClass\r\n};\r\n\r\n},{}],9:[function(require,module,exports){\r\n(function (global){(function (){\r\n'use strict';\r\n\r\nvar emitter = require('contra/emitter');\r\nvar crossvent = require('crossvent');\r\nvar classes = require('./classes');\r\nvar doc = document;\r\nvar documentElement = doc.documentElement;\r\n\r\nfunction dragula (initialContainers, options) {\r\n  var len = arguments.length;\r\n  if (len === 1 && Array.isArray(initialContainers) === false) {\r\n    options = initialContainers;\r\n    initialContainers = [];\r\n  }\r\n  var _mirror; // mirror image\r\n  var _source; // source container\r\n  var _item; // item being dragged\r\n  var _offsetX; // reference x\r\n  var _offsetY; // reference y\r\n  var _moveX; // reference move x\r\n  var _moveY; // reference move y\r\n  var _initialSibling; // reference sibling when grabbed\r\n  var _currentSibling; // reference sibling now\r\n  var _copy; // item used for copying\r\n  var _renderTimer; // timer for setTimeout renderMirrorImage\r\n  var _lastDropTarget = null; // last container item was over\r\n  var _grabbed; // holds mousedown context until first mousemove\r\n\r\n  var o = options || {};\r\n  if (o.moves === void 0) { o.moves = always; }\r\n  if (o.accepts === void 0) { o.accepts = always; }\r\n  if (o.invalid === void 0) { o.invalid = invalidTarget; }\r\n  if (o.containers === void 0) { o.containers = initialContainers || []; }\r\n  if (o.isContainer === void 0) { o.isContainer = never; }\r\n  if (o.copy === void 0) { o.copy = false; }\r\n  if (o.copySortSource === void 0) { o.copySortSource = false; }\r\n  if (o.revertOnSpill === void 0) { o.revertOnSpill = false; }\r\n  if (o.removeOnSpill === void 0) { o.removeOnSpill = false; }\r\n  if (o.direction === void 0) { o.direction = 'vertical'; }\r\n  if (o.ignoreInputTextSelection === void 0) { o.ignoreInputTextSelection = true; }\r\n  if (o.mirrorContainer === void 0) { o.mirrorContainer = doc.body; }\r\n\r\n  var drake = emitter({\r\n    containers: o.containers,\r\n    start: manualStart,\r\n    end: end,\r\n    cancel: cancel,\r\n    remove: remove,\r\n    destroy: destroy,\r\n    canMove: canMove,\r\n    dragging: false\r\n  });\r\n\r\n  if (o.removeOnSpill === true) {\r\n    drake.on('over', spillOver).on('out', spillOut);\r\n  }\r\n\r\n  events();\r\n\r\n  return drake;\r\n\r\n  function isContainer (el) {\r\n    return drake.containers.indexOf(el) !== -1 || o.isContainer(el);\r\n  }\r\n\r\n  function events (remove) {\r\n    var op = remove ? 'remove' : 'add';\r\n    touchy(documentElement, op, 'mousedown', grab);\r\n    touchy(documentElement, op, 'mouseup', release);\r\n  }\r\n\r\n  function eventualMovements (remove) {\r\n    var op = remove ? 'remove' : 'add';\r\n    touchy(documentElement, op, 'mousemove', startBecauseMouseMoved);\r\n  }\r\n\r\n  function movements (remove) {\r\n    var op = remove ? 'remove' : 'add';\r\n    crossvent[op](documentElement, 'selectstart', preventGrabbed); // IE8\r\n    crossvent[op](documentElement, 'click', preventGrabbed);\r\n  }\r\n\r\n  function destroy () {\r\n    events(true);\r\n    release({});\r\n  }\r\n\r\n  function preventGrabbed (e) {\r\n    if (_grabbed) {\r\n      e.preventDefault();\r\n    }\r\n  }\r\n\r\n  function grab (e) {\r\n    _moveX = e.clientX;\r\n    _moveY = e.clientY;\r\n\r\n    var ignore = whichMouseButton(e) !== 1 || e.metaKey || e.ctrlKey;\r\n    if (ignore) {\r\n      return; // we only care about honest-to-god left clicks and touch events\r\n    }\r\n    var item = e.target;\r\n    var context = canStart(item);\r\n    if (!context) {\r\n      return;\r\n    }\r\n    _grabbed = context;\r\n    eventualMovements();\r\n    if (e.type === 'mousedown') {\r\n      if (isInput(item)) { // see also: https://github.com/bevacqua/dragula/issues/208\r\n        item.focus(); // fixes https://github.com/bevacqua/dragula/issues/176\r\n      } else {\r\n        e.preventDefault(); // fixes https://github.com/bevacqua/dragula/issues/155\r\n      }\r\n    }\r\n  }\r\n\r\n  function startBecauseMouseMoved (e) {\r\n    if (!_grabbed) {\r\n      return;\r\n    }\r\n    if (whichMouseButton(e) === 0) {\r\n      release({});\r\n      return; // when text is selected on an input and then dragged, mouseup doesn't fire. this is our only hope\r\n    }\r\n\r\n    // truthy check fixes #239, equality fixes #207, fixes #501\r\n    if ((e.clientX !== void 0 && Math.abs(e.clientX - _moveX) <= (o.slideFactorX || 0)) &&\r\n      (e.clientY !== void 0 && Math.abs(e.clientY - _moveY) <= (o.slideFactorY || 0))) {\r\n      return;\r\n    }\r\n\r\n    if (o.ignoreInputTextSelection) {\r\n      var clientX = getCoord('clientX', e) || 0;\r\n      var clientY = getCoord('clientY', e) || 0;\r\n      var elementBehindCursor = doc.elementFromPoint(clientX, clientY);\r\n      if (isInput(elementBehindCursor)) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    var grabbed = _grabbed; // call to end() unsets _grabbed\r\n    eventualMovements(true);\r\n    movements();\r\n    end();\r\n    start(grabbed);\r\n\r\n    var offset = getOffset(_item);\r\n    _offsetX = getCoord('pageX', e) - offset.left;\r\n    _offsetY = getCoord('pageY', e) - offset.top;\r\n\r\n    classes.add(_copy || _item, 'gu-transit');\r\n    renderMirrorImage();\r\n    drag(e);\r\n  }\r\n\r\n  function canStart (item) {\r\n    if (drake.dragging && _mirror) {\r\n      return;\r\n    }\r\n    if (isContainer(item)) {\r\n      return; // don't drag container itself\r\n    }\r\n    var handle = item;\r\n    while (getParent(item) && isContainer(getParent(item)) === false) {\r\n      if (o.invalid(item, handle)) {\r\n        return;\r\n      }\r\n      item = getParent(item); // drag target should be a top element\r\n      if (!item) {\r\n        return;\r\n      }\r\n    }\r\n    var source = getParent(item);\r\n    if (!source) {\r\n      return;\r\n    }\r\n    if (o.invalid(item, handle)) {\r\n      return;\r\n    }\r\n\r\n    var movable = o.moves(item, source, handle, nextEl(item));\r\n    if (!movable) {\r\n      return;\r\n    }\r\n\r\n    return {\r\n      item: item,\r\n      source: source\r\n    };\r\n  }\r\n\r\n  function canMove (item) {\r\n    return !!canStart(item);\r\n  }\r\n\r\n  function manualStart (item) {\r\n    var context = canStart(item);\r\n    if (context) {\r\n      start(context);\r\n    }\r\n  }\r\n\r\n  function start (context) {\r\n    if (isCopy(context.item, context.source)) {\r\n      _copy = context.item.cloneNode(true);\r\n      drake.emit('cloned', _copy, context.item, 'copy');\r\n    }\r\n\r\n    _source = context.source;\r\n    _item = context.item;\r\n    _initialSibling = _currentSibling = nextEl(context.item);\r\n\r\n    drake.dragging = true;\r\n    drake.emit('drag', _item, _source);\r\n  }\r\n\r\n  function invalidTarget () {\r\n    return false;\r\n  }\r\n\r\n  function end () {\r\n    if (!drake.dragging) {\r\n      return;\r\n    }\r\n    var item = _copy || _item;\r\n    drop(item, getParent(item));\r\n  }\r\n\r\n  function ungrab () {\r\n    _grabbed = false;\r\n    eventualMovements(true);\r\n    movements(true);\r\n  }\r\n\r\n  function release (e) {\r\n    ungrab();\r\n\r\n    if (!drake.dragging) {\r\n      return;\r\n    }\r\n    var item = _copy || _item;\r\n    var clientX = getCoord('clientX', e) || 0;\r\n    var clientY = getCoord('clientY', e) || 0;\r\n    var elementBehindCursor = getElementBehindPoint(_mirror, clientX, clientY);\r\n    var dropTarget = findDropTarget(elementBehindCursor, clientX, clientY);\r\n    if (dropTarget && ((_copy && o.copySortSource) || (!_copy || dropTarget !== _source))) {\r\n      drop(item, dropTarget);\r\n    } else if (o.removeOnSpill) {\r\n      remove();\r\n    } else {\r\n      cancel();\r\n    }\r\n  }\r\n\r\n  function drop (item, target) {\r\n    var parent = getParent(item);\r\n    if (_copy && o.copySortSource && target === _source) {\r\n      parent.removeChild(_item);\r\n    }\r\n    if (isInitialPlacement(target)) {\r\n      drake.emit('cancel', item, _source, _source);\r\n    } else {\r\n      drake.emit('drop', item, target, _source, _currentSibling);\r\n    }\r\n    cleanup();\r\n  }\r\n\r\n  function remove () {\r\n    if (!drake.dragging) {\r\n      return;\r\n    }\r\n    var item = _copy || _item;\r\n    var parent = getParent(item);\r\n    if (parent) {\r\n      parent.removeChild(item);\r\n    }\r\n    drake.emit(_copy ? 'cancel' : 'remove', item, parent, _source);\r\n    cleanup();\r\n  }\r\n\r\n  function cancel (revert) {\r\n    if (!drake.dragging) {\r\n      return;\r\n    }\r\n    var reverts = arguments.length > 0 ? revert : o.revertOnSpill;\r\n    var item = _copy || _item;\r\n    var parent = getParent(item);\r\n    var initial = isInitialPlacement(parent);\r\n    if (initial === false && reverts) {\r\n      if (_copy) {\r\n        if (parent) {\r\n          parent.removeChild(_copy);\r\n        }\r\n      } else {\r\n        _source.insertBefore(item, _initialSibling);\r\n      }\r\n    }\r\n    if (initial || reverts) {\r\n      drake.emit('cancel', item, _source, _source);\r\n    } else {\r\n      drake.emit('drop', item, parent, _source, _currentSibling);\r\n    }\r\n    cleanup();\r\n  }\r\n\r\n  function cleanup () {\r\n    var item = _copy || _item;\r\n    ungrab();\r\n    removeMirrorImage();\r\n    if (item) {\r\n      classes.rm(item, 'gu-transit');\r\n    }\r\n    if (_renderTimer) {\r\n      clearTimeout(_renderTimer);\r\n    }\r\n    drake.dragging = false;\r\n    if (_lastDropTarget) {\r\n      drake.emit('out', item, _lastDropTarget, _source);\r\n    }\r\n    drake.emit('dragend', item);\r\n    _source = _item = _copy = _initialSibling = _currentSibling = _renderTimer = _lastDropTarget = null;\r\n  }\r\n\r\n  function isInitialPlacement (target, s) {\r\n    var sibling;\r\n    if (s !== void 0) {\r\n      sibling = s;\r\n    } else if (_mirror) {\r\n      sibling = _currentSibling;\r\n    } else {\r\n      sibling = nextEl(_copy || _item);\r\n    }\r\n    return target === _source && sibling === _initialSibling;\r\n  }\r\n\r\n  function findDropTarget (elementBehindCursor, clientX, clientY) {\r\n    var target = elementBehindCursor;\r\n    while (target && !accepted()) {\r\n      target = getParent(target);\r\n    }\r\n    return target;\r\n\r\n    function accepted () {\r\n      var droppable = isContainer(target);\r\n      if (droppable === false) {\r\n        return false;\r\n      }\r\n\r\n      var immediate = getImmediateChild(target, elementBehindCursor);\r\n      var reference = getReference(target, immediate, clientX, clientY);\r\n      var initial = isInitialPlacement(target, reference);\r\n      if (initial) {\r\n        return true; // should always be able to drop it right back where it was\r\n      }\r\n      return o.accepts(_item, target, _source, reference);\r\n    }\r\n  }\r\n\r\n  function drag (e) {\r\n    if (!_mirror) {\r\n      return;\r\n    }\r\n    e.preventDefault();\r\n\r\n    var clientX = getCoord('clientX', e) || 0;\r\n    var clientY = getCoord('clientY', e) || 0;\r\n    var x = clientX - _offsetX;\r\n    var y = clientY - _offsetY;\r\n\r\n    _mirror.style.left = x + 'px';\r\n    _mirror.style.top = y + 'px';\r\n\r\n    var item = _copy || _item;\r\n    var elementBehindCursor = getElementBehindPoint(_mirror, clientX, clientY);\r\n    var dropTarget = findDropTarget(elementBehindCursor, clientX, clientY);\r\n    var changed = dropTarget !== null && dropTarget !== _lastDropTarget;\r\n    if (changed || dropTarget === null) {\r\n      out();\r\n      _lastDropTarget = dropTarget;\r\n      over();\r\n    }\r\n    var parent = getParent(item);\r\n    if (dropTarget === _source && _copy && !o.copySortSource) {\r\n      if (parent) {\r\n        parent.removeChild(item);\r\n      }\r\n      return;\r\n    }\r\n    var reference;\r\n    var immediate = getImmediateChild(dropTarget, elementBehindCursor);\r\n    if (immediate !== null) {\r\n      reference = getReference(dropTarget, immediate, clientX, clientY);\r\n    } else if (o.revertOnSpill === true && !_copy) {\r\n      reference = _initialSibling;\r\n      dropTarget = _source;\r\n    } else {\r\n      if (_copy && parent) {\r\n        parent.removeChild(item);\r\n      }\r\n      return;\r\n    }\r\n    if (\r\n      (reference === null && changed) ||\r\n      reference !== item &&\r\n      reference !== nextEl(item)\r\n    ) {\r\n      _currentSibling = reference;\r\n      dropTarget.insertBefore(item, reference);\r\n      drake.emit('shadow', item, dropTarget, _source);\r\n    }\r\n    function moved (type) { drake.emit(type, item, _lastDropTarget, _source); }\r\n    function over () { if (changed) { moved('over'); } }\r\n    function out () { if (_lastDropTarget) { moved('out'); } }\r\n  }\r\n\r\n  function spillOver (el) {\r\n    classes.rm(el, 'gu-hide');\r\n  }\r\n\r\n  function spillOut (el) {\r\n    if (drake.dragging) { classes.add(el, 'gu-hide'); }\r\n  }\r\n\r\n  function renderMirrorImage () {\r\n    if (_mirror) {\r\n      return;\r\n    }\r\n    var rect = _item.getBoundingClientRect();\r\n    _mirror = _item.cloneNode(true);\r\n    _mirror.style.width = getRectWidth(rect) + 'px';\r\n    _mirror.style.height = getRectHeight(rect) + 'px';\r\n    classes.rm(_mirror, 'gu-transit');\r\n    classes.add(_mirror, 'gu-mirror');\r\n    o.mirrorContainer.appendChild(_mirror);\r\n    touchy(documentElement, 'add', 'mousemove', drag);\r\n    classes.add(o.mirrorContainer, 'gu-unselectable');\r\n    drake.emit('cloned', _mirror, _item, 'mirror');\r\n  }\r\n\r\n  function removeMirrorImage () {\r\n    if (_mirror) {\r\n      classes.rm(o.mirrorContainer, 'gu-unselectable');\r\n      touchy(documentElement, 'remove', 'mousemove', drag);\r\n      getParent(_mirror).removeChild(_mirror);\r\n      _mirror = null;\r\n    }\r\n  }\r\n\r\n  function getImmediateChild (dropTarget, target) {\r\n    var immediate = target;\r\n    while (immediate !== dropTarget && getParent(immediate) !== dropTarget) {\r\n      immediate = getParent(immediate);\r\n    }\r\n    if (immediate === documentElement) {\r\n      return null;\r\n    }\r\n    return immediate;\r\n  }\r\n\r\n  function getReference (dropTarget, target, x, y) {\r\n    var horizontal = o.direction === 'horizontal';\r\n    var reference = target !== dropTarget ? inside() : outside();\r\n    return reference;\r\n\r\n    function outside () { // slower, but able to figure out any position\r\n      var len = dropTarget.children.length;\r\n      var i;\r\n      var el;\r\n      var rect;\r\n      for (i = 0; i < len; i++) {\r\n        el = dropTarget.children[i];\r\n        rect = el.getBoundingClientRect();\r\n        if (horizontal && (rect.left + rect.width / 2) > x) { return el; }\r\n        if (!horizontal && (rect.top + rect.height / 2) > y) { return el; }\r\n      }\r\n      return null;\r\n    }\r\n\r\n    function inside () { // faster, but only available if dropped inside a child element\r\n      var rect = target.getBoundingClientRect();\r\n      if (horizontal) {\r\n        return resolve(x > rect.left + getRectWidth(rect) / 2);\r\n      }\r\n      return resolve(y > rect.top + getRectHeight(rect) / 2);\r\n    }\r\n\r\n    function resolve (after) {\r\n      return after ? nextEl(target) : target;\r\n    }\r\n  }\r\n\r\n  function isCopy (item, container) {\r\n    return typeof o.copy === 'boolean' ? o.copy : o.copy(item, container);\r\n  }\r\n}\r\n\r\nfunction touchy (el, op, type, fn) {\r\n  var touch = {\r\n    mouseup: 'touchend',\r\n    mousedown: 'touchstart',\r\n    mousemove: 'touchmove'\r\n  };\r\n  var pointers = {\r\n    mouseup: 'pointerup',\r\n    mousedown: 'pointerdown',\r\n    mousemove: 'pointermove'\r\n  };\r\n  var microsoft = {\r\n    mouseup: 'MSPointerUp',\r\n    mousedown: 'MSPointerDown',\r\n    mousemove: 'MSPointerMove'\r\n  };\r\n  if (global.navigator.pointerEnabled) {\r\n    crossvent[op](el, pointers[type], fn);\r\n  } else if (global.navigator.msPointerEnabled) {\r\n    crossvent[op](el, microsoft[type], fn);\r\n  } else {\r\n    crossvent[op](el, touch[type], fn);\r\n    crossvent[op](el, type, fn);\r\n  }\r\n}\r\n\r\nfunction whichMouseButton (e) {\r\n  if (e.touches !== void 0) { return e.touches.length; }\r\n  if (e.which !== void 0 && e.which !== 0) { return e.which; } // see https://github.com/bevacqua/dragula/issues/261\r\n  if (e.buttons !== void 0) { return e.buttons; }\r\n  var button = e.button;\r\n  if (button !== void 0) { // see https://github.com/jquery/jquery/blob/99e8ff1baa7ae341e94bb89c3e84570c7c3ad9ea/src/event.js#L573-L575\r\n    return button & 1 ? 1 : button & 2 ? 3 : (button & 4 ? 2 : 0);\r\n  }\r\n}\r\n\r\nfunction getOffset (el) {\r\n  var rect = el.getBoundingClientRect();\r\n  return {\r\n    left: rect.left + getScroll('scrollLeft', 'pageXOffset'),\r\n    top: rect.top + getScroll('scrollTop', 'pageYOffset')\r\n  };\r\n}\r\n\r\nfunction getScroll (scrollProp, offsetProp) {\r\n  if (typeof global[offsetProp] !== 'undefined') {\r\n    return global[offsetProp];\r\n  }\r\n  if (documentElement.clientHeight) {\r\n    return documentElement[scrollProp];\r\n  }\r\n  return doc.body[scrollProp];\r\n}\r\n\r\nfunction getElementBehindPoint (point, x, y) {\r\n  point = point || {};\r\n  var state = point.className || '';\r\n  var el;\r\n  point.className += ' gu-hide';\r\n  el = doc.elementFromPoint(x, y);\r\n  point.className = state;\r\n  return el;\r\n}\r\n\r\nfunction never () { return false; }\r\nfunction always () { return true; }\r\nfunction getRectWidth (rect) { return rect.width || (rect.right - rect.left); }\r\nfunction getRectHeight (rect) { return rect.height || (rect.bottom - rect.top); }\r\nfunction getParent (el) { return el.parentNode === doc ? null : el.parentNode; }\r\nfunction isInput (el) { return el.tagName === 'INPUT' || el.tagName === 'TEXTAREA' || el.tagName === 'SELECT' || isEditable(el); }\r\nfunction isEditable (el) {\r\n  if (!el) { return false; } // no parents were editable\r\n  if (el.contentEditable === 'false') { return false; } // stop the lookup\r\n  if (el.contentEditable === 'true') { return true; } // found a contentEditable element in the chain\r\n  return isEditable(getParent(el)); // contentEditable is set to 'inherit'\r\n}\r\n\r\nfunction nextEl (el) {\r\n  return el.nextElementSibling || manually();\r\n  function manually () {\r\n    var sibling = el;\r\n    do {\r\n      sibling = sibling.nextSibling;\r\n    } while (sibling && sibling.nodeType !== 1);\r\n    return sibling;\r\n  }\r\n}\r\n\r\nfunction getEventHost (e) {\r\n  // on touchend event, we have to use `e.changedTouches`\r\n  // see http://stackoverflow.com/questions/7192563/touchend-event-properties\r\n  // see https://github.com/bevacqua/dragula/issues/34\r\n  if (e.targetTouches && e.targetTouches.length) {\r\n    return e.targetTouches[0];\r\n  }\r\n  if (e.changedTouches && e.changedTouches.length) {\r\n    return e.changedTouches[0];\r\n  }\r\n  return e;\r\n}\r\n\r\nfunction getCoord (coord, e) {\r\n  var host = getEventHost(e);\r\n  var missMap = {\r\n    pageX: 'clientX', // IE8\r\n    pageY: 'clientY' // IE8\r\n  };\r\n  if (coord in missMap && !(coord in host) && missMap[coord] in host) {\r\n    coord = missMap[coord];\r\n  }\r\n  return host[coord];\r\n}\r\n\r\nmodule.exports = dragula;\r\n\r\n}).call(this)}).call(this,typeof __webpack_require__.g !== \"undefined\" ? __webpack_require__.g : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\r\n},{\"./classes\":8,\"contra/emitter\":4,\"crossvent\":5}],10:[function(require,module,exports){\r\n// shim for using process in browser\r\nvar process = module.exports = {};\r\n\r\n// cached from whatever global is present so that test runners that stub it\r\n// don't break things.  But we need to wrap it in a try catch in case it is\r\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\r\n// function because try/catches deoptimize in certain engines.\r\n\r\nvar cachedSetTimeout;\r\nvar cachedClearTimeout;\r\n\r\nfunction defaultSetTimout() {\r\n    throw new Error('setTimeout has not been defined');\r\n}\r\nfunction defaultClearTimeout () {\r\n    throw new Error('clearTimeout has not been defined');\r\n}\r\n(function () {\r\n    try {\r\n        if (typeof setTimeout === 'function') {\r\n            cachedSetTimeout = setTimeout;\r\n        } else {\r\n            cachedSetTimeout = defaultSetTimout;\r\n        }\r\n    } catch (e) {\r\n        cachedSetTimeout = defaultSetTimout;\r\n    }\r\n    try {\r\n        if (typeof clearTimeout === 'function') {\r\n            cachedClearTimeout = clearTimeout;\r\n        } else {\r\n            cachedClearTimeout = defaultClearTimeout;\r\n        }\r\n    } catch (e) {\r\n        cachedClearTimeout = defaultClearTimeout;\r\n    }\r\n} ())\r\nfunction runTimeout(fun) {\r\n    if (cachedSetTimeout === setTimeout) {\r\n        //normal enviroments in sane situations\r\n        return setTimeout(fun, 0);\r\n    }\r\n    // if setTimeout wasn't available but was latter defined\r\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\r\n        cachedSetTimeout = setTimeout;\r\n        return setTimeout(fun, 0);\r\n    }\r\n    try {\r\n        // when when somebody has screwed with setTimeout but no I.E. maddness\r\n        return cachedSetTimeout(fun, 0);\r\n    } catch(e){\r\n        try {\r\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\r\n            return cachedSetTimeout.call(null, fun, 0);\r\n        } catch(e){\r\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\r\n            return cachedSetTimeout.call(this, fun, 0);\r\n        }\r\n    }\r\n\r\n\r\n}\r\nfunction runClearTimeout(marker) {\r\n    if (cachedClearTimeout === clearTimeout) {\r\n        //normal enviroments in sane situations\r\n        return clearTimeout(marker);\r\n    }\r\n    // if clearTimeout wasn't available but was latter defined\r\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\r\n        cachedClearTimeout = clearTimeout;\r\n        return clearTimeout(marker);\r\n    }\r\n    try {\r\n        // when when somebody has screwed with setTimeout but no I.E. maddness\r\n        return cachedClearTimeout(marker);\r\n    } catch (e){\r\n        try {\r\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\r\n            return cachedClearTimeout.call(null, marker);\r\n        } catch (e){\r\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\r\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\r\n            return cachedClearTimeout.call(this, marker);\r\n        }\r\n    }\r\n\r\n\r\n\r\n}\r\nvar queue = [];\r\nvar draining = false;\r\nvar currentQueue;\r\nvar queueIndex = -1;\r\n\r\nfunction cleanUpNextTick() {\r\n    if (!draining || !currentQueue) {\r\n        return;\r\n    }\r\n    draining = false;\r\n    if (currentQueue.length) {\r\n        queue = currentQueue.concat(queue);\r\n    } else {\r\n        queueIndex = -1;\r\n    }\r\n    if (queue.length) {\r\n        drainQueue();\r\n    }\r\n}\r\n\r\nfunction drainQueue() {\r\n    if (draining) {\r\n        return;\r\n    }\r\n    var timeout = runTimeout(cleanUpNextTick);\r\n    draining = true;\r\n\r\n    var len = queue.length;\r\n    while(len) {\r\n        currentQueue = queue;\r\n        queue = [];\r\n        while (++queueIndex < len) {\r\n            if (currentQueue) {\r\n                currentQueue[queueIndex].run();\r\n            }\r\n        }\r\n        queueIndex = -1;\r\n        len = queue.length;\r\n    }\r\n    currentQueue = null;\r\n    draining = false;\r\n    runClearTimeout(timeout);\r\n}\r\n\r\nprocess.nextTick = function (fun) {\r\n    var args = new Array(arguments.length - 1);\r\n    if (arguments.length > 1) {\r\n        for (var i = 1; i < arguments.length; i++) {\r\n            args[i - 1] = arguments[i];\r\n        }\r\n    }\r\n    queue.push(new Item(fun, args));\r\n    if (queue.length === 1 && !draining) {\r\n        runTimeout(drainQueue);\r\n    }\r\n};\r\n\r\n// v8 likes predictible objects\r\nfunction Item(fun, array) {\r\n    this.fun = fun;\r\n    this.array = array;\r\n}\r\nItem.prototype.run = function () {\r\n    this.fun.apply(null, this.array);\r\n};\r\nprocess.title = 'browser';\r\nprocess.browser = true;\r\nprocess.env = {};\r\nprocess.argv = [];\r\nprocess.version = ''; // empty string to avoid regexp issues\r\nprocess.versions = {};\r\n\r\nfunction noop() {}\r\n\r\nprocess.on = noop;\r\nprocess.addListener = noop;\r\nprocess.once = noop;\r\nprocess.off = noop;\r\nprocess.removeListener = noop;\r\nprocess.removeAllListeners = noop;\r\nprocess.emit = noop;\r\nprocess.prependListener = noop;\r\nprocess.prependOnceListener = noop;\r\n\r\nprocess.listeners = function (name) { return [] }\r\n\r\nprocess.binding = function (name) {\r\n    throw new Error('process.binding is not supported');\r\n};\r\n\r\nprocess.cwd = function () { return '/' };\r\nprocess.chdir = function (dir) {\r\n    throw new Error('process.chdir is not supported');\r\n};\r\nprocess.umask = function() { return 0; };\r\n\r\n},{}],11:[function(require,module,exports){\r\n(function (setImmediate){(function (){\r\nvar si = typeof setImmediate === 'function', tick;\r\nif (si) {\r\n  tick = function (fn) { setImmediate(fn); };\r\n} else {\r\n  tick = function (fn) { setTimeout(fn, 0); };\r\n}\r\n\r\nmodule.exports = tick;\r\n}).call(this)}).call(this,require(\"timers\").setImmediate)\r\n},{\"timers\":12}],12:[function(require,module,exports){\r\n(function (setImmediate,clearImmediate){(function (){\r\nvar nextTick = require('process/browser.js').nextTick;\r\nvar apply = Function.prototype.apply;\r\nvar slice = Array.prototype.slice;\r\nvar immediateIds = {};\r\nvar nextImmediateId = 0;\r\n\r\n// DOM APIs, for completeness\r\n\r\nexports.setTimeout = function() {\r\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\r\n};\r\nexports.setInterval = function() {\r\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\r\n};\r\nexports.clearTimeout =\r\nexports.clearInterval = function(timeout) { timeout.close(); };\r\n\r\nfunction Timeout(id, clearFn) {\r\n  this._id = id;\r\n  this._clearFn = clearFn;\r\n}\r\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\r\nTimeout.prototype.close = function() {\r\n  this._clearFn.call(window, this._id);\r\n};\r\n\r\n// Does not start the time, just sets up the members needed.\r\nexports.enroll = function(item, msecs) {\r\n  clearTimeout(item._idleTimeoutId);\r\n  item._idleTimeout = msecs;\r\n};\r\n\r\nexports.unenroll = function(item) {\r\n  clearTimeout(item._idleTimeoutId);\r\n  item._idleTimeout = -1;\r\n};\r\n\r\nexports._unrefActive = exports.active = function(item) {\r\n  clearTimeout(item._idleTimeoutId);\r\n\r\n  var msecs = item._idleTimeout;\r\n  if (msecs >= 0) {\r\n    item._idleTimeoutId = setTimeout(function onTimeout() {\r\n      if (item._onTimeout)\r\n        item._onTimeout();\r\n    }, msecs);\r\n  }\r\n};\r\n\r\n// That's not how node.js implements it but the exposed api is the same.\r\nexports.setImmediate = typeof setImmediate === \"function\" ? setImmediate : function(fn) {\r\n  var id = nextImmediateId++;\r\n  var args = arguments.length < 2 ? false : slice.call(arguments, 1);\r\n\r\n  immediateIds[id] = true;\r\n\r\n  nextTick(function onNextTick() {\r\n    if (immediateIds[id]) {\r\n      // fn.call() is faster so we optimize for the common use-case\r\n      // @see http://jsperf.com/call-apply-segu\r\n      if (args) {\r\n        fn.apply(null, args);\r\n      } else {\r\n        fn.call(null);\r\n      }\r\n      // Prevent ids from leaking\r\n      exports.clearImmediate(id);\r\n    }\r\n  });\r\n\r\n  return id;\r\n};\r\n\r\nexports.clearImmediate = typeof clearImmediate === \"function\" ? clearImmediate : function(id) {\r\n  delete immediateIds[id];\r\n};\r\n}).call(this)}).call(this,require(\"timers\").setImmediate,require(\"timers\").clearImmediate)\r\n},{\"process/browser.js\":10,\"timers\":12}]},{},[1]);\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/jkanban/dist/jkanban.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./resources/assets/core/plugins/custom/jkanban/jkanban.js");
/******/ 	
/******/ })()
;